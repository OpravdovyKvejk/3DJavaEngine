package engineTest;

import java.util.ArrayList;
import java.util.List;

import org.lwjgl.opengl.Display;
import org.lwjgl.util.vector.Vector3f;

import entities.Camera;
import entities.Entity;
import entities.Light;
import models.RawModel;
import models.TexturedModel;
import renderEngine.DisplayManager;
import renderEngine.Loader;
import renderEngine.OBJLoader;
import renderEngine.Renderer;
import shaders.StaticShader;
import textures.ModelTexture;

public class MainGameLoop {

	public static void main(String[] args) {
		
		
		DisplayManager.createDisplay();
		
		Loader loader = new Loader();
		StaticShader shader = new StaticShader();
		Renderer renderer = new Renderer(shader);
		
		RawModel model = OBJLoader.loadObjModel("dragon", loader);
		TexturedModel cubeModel = new TexturedModel(model, new ModelTexture(loader.loadTexture("texture0001")));
		
		TexturedModel staticModel = new TexturedModel(model, new ModelTexture(loader.loadTexture("texture0000")));
		ModelTexture texture = staticModel.getTexture();
		texture.setShineDamper(10);
		texture.setReflectivity(1);

		Light light = new Light(new Vector3f(0, -5, -15), new Vector3f(0, 1, 0));
		
		Camera camera = new Camera();
		
		List<Entity> allDragons = new ArrayList<Entity>();
		
		
		while(!Display.isCloseRequested()){ //If the window hasn't yet been ordered to close.
			//Game Logic
			camera.move();
			//Rendering
			renderer.prepare(); //Prepares OpenGL for rendering.
			shader.start();
			shader.loadLight(light);
			shader.loadViewMatrix(camera);
			renderer.render(entity, shader);
			shader.stop();
			DisplayManager.updateDisplay(); //Necessary for the user to see the changes.
			
		}
		//Window is closed.
		shader.cleanUp();
		loader.cleanUp();
		DisplayManager.closeDisplay();

	}

}
